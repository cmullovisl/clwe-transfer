#!/bin/bash
set -euo pipefail

# TODO choosable alignment method
pivot="$1"
languages="$2"

embdim=300

model_dir=models
dict_dir=dicts
output_dir=align

download_dictionaries() {
    local src="$1"
    local tgt="$2"

    local dict_url="https://dl.fbaipublicfiles.com/arrival/dictionaries"
    curl -# "${dict_url}/$src-$tgt.txt" | tr '\t' ' ' > "$dict_dir/$src-$tgt.txt"
    curl -# "${dict_url}/$src-$tgt.0-5000.txt" | tr '\t' ' ' > "$dict_dir/$src-$tgt.0-5000.txt"
}

mkdir -p "$dict_dir" "$output_dir"
for lng in $languages; do
    [[ $pivot = "$lng" ]] && continue
    #[[ -e $dict_dir/$lng-$pivot ]] || download_dictionaries "$lng" "$pivot"
    download_dictionaries "$lng" "$pivot"


    # fasttext saves the aligned embeddings to the output file (`--output`)
    # and the alignment matrix to the output file + "-mat" suffix. Since we
    # only require the matrix, we discard the embeddings by writing to
    # /dev/null (through a symbolic link hack)
    outfile="$output_dir/aligned.$lng.vec"
    ln -sf /dev/null "$outfile"

    #python -u "$fasttext"/alignment/align.py \
    fasttext_align \
        --src_emb "$model_dir/cc.$lng.$embdim.vec" \
        --tgt_emb "$model_dir/cc.$pivot.$embdim.vec" \
        --dico_train "$dict_dir/$lng-$pivot.txt" \
        --dico_test  "$dict_dir/$lng-$pivot.0-5000.txt" \
        --output "$outfile" # 2>&1 | tee "$logdir/align.$lng.log"

    rm "$outfile"
done

#python "$SCRIPT_DIR"/scripts/fasttext/write-eye.py \
[[ -f $output_dir/aligned.$pivot.vec-mat ]] ||
    write-eye.py "$embdim" > "$output_dir/aligned.$pivot.vec-mat"
