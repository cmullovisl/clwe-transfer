#!/bin/bash
set -euo pipefail

backtranslate_translate() {
    local model="$1"
    local src="$2"
    local tgt="$3"
    local dset="$4"

    local gpu="${gpu:-0}"
    local beamsize=4
    local batchsize=4000

    onmt_translate \
        -batch_type tokens \
        -batch_size "$batchsize" \
        -beam_size "$beamsize" \
        -gpu "$gpu" \
        -model "$model" \
        -src "$rounddir/src/$dset.$src-$tgt.$src" \
        -output "$rounddir/$dset.$src-$tgt.$tgt.pred" \
        -src_embeddings "data/embeddings/embeddings.$src.vec" \
        -tgt_embeddings "data/embeddings/embeddings.$tgt.vec"
}

backtranslate() {
    local src tgt dset
    local model="$1"
    local sourcelanguages="$2"
    local targetlanguages="$3"

    for dset in train dev; do
        rm -f "$datadir/$dset.$stage.tgt"
        rm -f "$datadir/$dset.$stage.src"

        for src in $sourcelanguages; do
            for tgt in $targetlanguages; do
                [[ $src = "$tgt" ]] && continue
                [[ -f $rounddir/src/$dset.$src-$tgt.$src ]] || continue

                backtranslate_translate "$model" "$src" "$tgt" "$dset"

                cat "$rounddir/$dset.$src-$tgt.$tgt.pred" |
                    postprocess.py "$tgt" |
                    sed "s/^/#${src}# /" >> "$datadir/$dset.$stage.src"

                cat "$rounddir/$dset.$src-$tgt.$src" |
                    sed "s/^#${tgt}# //" >> "$datadir/$dset.$stage.tgt"
            done
        done
    done

    # FIXME defined somewhere else
    #datadir="$datadir" shuffle_corpus "train"
    shuffle_corpus "$datadir/train.$stage"
}

basemodel="$1"
backtranslationmodel="$2"
sourcelanguages="$3"
targetlanguages="$4"
stage="$5"

rounddir="data/$stage"
datadir="data/corpus"

# name of the model ... not so important actually since the averaged checkpoint
# has a different name anyways
model="continuous"
# config filename inside config/$stage (without .yml extension)
backtranslationconfig="train"

# should already exist
#mkdir -p "$rounddir"

# deps: data/$stage/src/{train,dev}.$tgt-$src.$tgt
# outs: data/corpus/{train,dev}.$stage.{src,tgt}
backtranslate "$backtranslationmodel" "$targetlanguages" "$sourcelanguages"

# deps: data/embeddings/embeddings.$lng.vec
#       ${basemodel}
# outs: saves/specials.pt
#       saves/data.vocab.pt
# FIXME don't add specials aleady in vocab
build_newlang_vocab "$basemodel" "$sourcelanguages" "$targetlanguages"

# deps: data/corpus/{train,dev}.$stage.{src,tgt}
#       saves/data.vocab.pt
# outs: saves/$stage/data.{train,valid}.[0-9]*.pt
#       saves/$stage/data.vocab.pt
#       saves/$stage/preprocess.log
#datadir="$datadir/bt" \
preprocess_reuse_vocab "$stage" "saves/data.vocab.pt"

# deps: saves/$stage/data.{train,valid}.[0-9]*.pt
#       saves/data.vocab.pt # XXX mistake?
#       config/$stage/${backtranslationconfig}.yml
#       ${basemodel}
# outs: models/$stage/${model}_step_*.pt
[[ $freezeenc ]] &&
    train_continue "$stage" "$model" "$backtranslationconfig" "$basemodel" -freeze_encoder -train_steps 16000 ||
    train_continue "$stage" "$model" "$backtranslationconfig" "$basemodel"

# deps: models/$stage/${model}_step_*.pt
# outs: models/${stage}_avg.pt
onmt_average_models -m "models/$stage"/*.pt -o "models/${stage}_avg.pt"

#rm -vf "$savedir"/data.train.[0-9]*.pt
#rm -vf "$savedir"/data.valid.[0-9]*.pt
#rm -vf "$savedir"/data.vocab.pt
